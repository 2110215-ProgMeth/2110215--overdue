@startuml
interface interfaces.Moveable {
+ void updateCoordinate()
}
class sharedObject.RenderableHolder {
- {static} RenderableHolder instance
+ {static} AudioClip hoverSound
+ {static} AudioClip confirmSound
+ {static} AudioClip declineSound
+ {static} ImageView mainMenuBackground
+ {static} ImageView darkWojak
+ {static} ImageView battleBackground
+ {static} Image unitImage
+ {static} ArrayList<IRenderable> townEntities
+ {static} ArrayList<IRenderable> battleEntities
+ {static} ArrayList<IRenderable> forestEntities
- {static} Comparator<IRenderable> comparator
+ <<Create>> RenderableHolder()
+ {static} void add(List<IRenderable>,IRenderable)
+ {static} RenderableHolder getInstance()
+ {static} String getPath(String)
+ {static} void update(List<IRenderable>)
+ {static} void loadSound()
+ {static} void loadImage()
+ {static} ArrayList<IRenderable> getTownEntities()
+ {static} ArrayList<IRenderable> getForestEntities()
+ {static} ArrayList<IRenderable> getBattleEntities()
+ {static} void setTownEntities()
+ {static} void setForestEntities()
+ {static} ArrayList<IRenderable> getCurrentEntities()
}
class items.DefensePotion {
+ <<Create>> DefensePotion()
+ void use(BaseUnit)
}
class items.Bomb {
+ <<Create>> Bomb()
+ void use(BaseUnit)
}
class items.ManaPotion {
+ <<Create>> ManaPotion()
+ void use(BaseUnit)
}
class items.HealthPotion {
+ <<Create>> HealthPotion()
+ void use(BaseUnit)
}
class items.ThrowingKnife {
+ <<Create>> ThrowingKnife()
+ void use(BaseUnit)
}
interface interfaces.Usable {
+ void use(BaseUnit)
}
interface interfaces.Consumable {
+ void use(BaseUnit)
}
interface interfaces.IRenderable {
+ int getZ()
+ void draw(GraphicsContext)
+ boolean isDestroyed()
+ String getName()
+ void setName(String)
}
class items.BaseItem {
# String name
# String description
# int price
# BaseUnit target
# boolean allTarget
+ void setName(String)
+ void setDescription(String)
+ void setPrice(int)
+ void setTarget(BaseUnit)
+ void setAllTarget(boolean)
+ String getName()
+ String getDescription()
+ int getPrice()
}
class items.StrengthPotion {
+ <<Create>> StrengthPotion()
+ void use(BaseUnit)
}


interfaces.Consumable <|.. items.DefensePotion
items.BaseItem <|-- items.DefensePotion
interfaces.Usable <|.. items.Bomb
items.BaseItem <|-- items.Bomb
interfaces.Consumable <|.. items.ManaPotion
items.BaseItem <|-- items.ManaPotion
interfaces.Consumable <|.. items.HealthPotion
items.BaseItem <|-- items.HealthPotion
interfaces.Usable <|.. items.ThrowingKnife
items.BaseItem <|-- items.ThrowingKnife
interfaces.Consumable <|.. items.StrengthPotion
items.BaseItem <|-- items.StrengthPotion
@enduml