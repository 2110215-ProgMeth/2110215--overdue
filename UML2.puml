@startuml
class battleEntity.combatMove.Judgement {
+ <<Create>> Judgement(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.Berserk {
+ <<Create>> Berserk(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.AttackMove {
# double percentDamage
+ <<Create>> AttackMove(BaseUnit)
+ void performEffect(BaseUnit)
+ String toString()
+ void setPercentDamage(double)
+ double getPercentDamage()
+ void setDescription(String)
}
class battleEntity.combatMove.CrossRipperSlasher {
+ <<Create>> CrossRipperSlasher(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.BackStab {
+ <<Create>> BackStab(BaseUnit)
+ void performEffect(BaseUnit)
}
abstract class battleEntity.combatMove.Buff {
- int defaultCount
- int count
- String name
- BaseUnit owner
+ <<Create>> Buff(String,BaseUnit,int)
+ {abstract}void performBuff()
+ {abstract}void destroyBuff()
+ void setOwner(BaseUnit)
+ void setName(String)
+ void setDefaultCount(int)
+ void setCount(int)
+ int getCount()
+ BaseUnit getOwner()
+ int getDefaultCount()
}
class battleEntity.combatMove.DarkMagic {
+ <<Create>> DarkMagic(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.EnchantDeadlyPoison {
+ <<Create>> EnchantDeadlyPoison(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.DebuffAttack {
- double reduce
+ <<Create>> DebuffAttack(String,BaseUnit,int,double)
+ void performBuff()
+ void destroyBuff()
}
class battleEntity.combatMove.HolyLight {
+ <<Create>> HolyLight(BaseUnit)
+ void performEffect(BaseUnit)
}
abstract class battleEntity.combatMove.BaseMove {
# String name
# int mpConsume
# BaseUnit owner
# BaseUnit target
# String description
- boolean allTarget
+ <<Create>> BaseMove(BaseUnit)
+ {abstract}void performEffect(BaseUnit)
+ {abstract}String toString()
+ String getName()
+ int getMpConsume()
+ BaseUnit getOwner()
+ BaseUnit getTarget()
+ String getDescription()
+ boolean isAllTarget()
+ void setName(String)
+ void setMpConsume(int)
+ void setOwner(BaseUnit)
+ void setTarget(BaseUnit)
+ void setDescription(String)
+ boolean isUsable()
+ void setAllTarget(boolean)
}
class battleEntity.combatMove.Unbreakable {
+ <<Create>> Unbreakable(BaseUnit)
+ void performEffect()
}
class battleEntity.combatMove.RoarOfThunder {
+ <<Create>> RoarOfThunder(BaseUnit)
+ void performEffect()
}
class battleEntity.combatMove.Firaga {
+ <<Create>> Firaga(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.RisingDragonStrike {
+ <<Create>> RisingDragonStrike(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.Poison {
+ <<Create>> Poison(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.Heal {
+ <<Create>> Heal(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.EarthShake {
+ <<Create>> EarthShake(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.BoostDefense {
- double boost
+ <<Create>> BoostDefense(String,BaseUnit,int,double)
+ void performBuff()
+ void destroyBuff()
}
class battleEntity.combatMove.DOT {
- double percentDamage
+ <<Create>> DOT(String,BaseUnit,int,double)
+ void performBuff()
+ void destroyBuff()
}
class battleEntity.combatMove.SupportMove {
# double percentHeal
+ <<Create>> SupportMove(BaseUnit)
+ void performEffect(BaseUnit)
+ String toString()
+ void setPercentHeal(double)
+ double getPercentHeal()
}
class battleEntity.combatMove.DrainLife {
+ <<Create>> DrainLife(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.DemonBite {
+ <<Create>> DemonBite(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.BasicAttack {
+ <<Create>> BasicAttack(String,BaseUnit)
+ void performEffect(BaseUnit)
+ String toString()
}
class battleEntity.combatMove.Taunt {
+ <<Create>> Taunt(Warrior)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.BlessingOfGod {
+ <<Create>> BlessingOfGod(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.Barrier {
+ <<Create>> Barrier(String,BaseUnit,int)
+ void performBuff()
+ void destroyBuff()
}
class battleEntity.combatMove.DebuffDefense {
- double reduce
+ <<Create>> DebuffDefense(String,BaseUnit,int,double)
+ void performBuff()
+ void destroyBuff()
}
class battleEntity.combatMove.Thundara {
+ <<Create>> Thundara(BaseUnit)
+ void performEffect()
}
class battleEntity.combatMove.DarkHold {
+ <<Create>> DarkHold(BaseUnit)
+ void performEffect(BaseUnit)
}
class battleEntity.combatMove.Temper {
- double boost
+ <<Create>> Temper(String,BaseUnit,int,double)
+ void performBuff()
+ void destroyBuff()
}
class battleEntity.combatMove.SoulEater {
+ <<Create>> SoulEater(BaseUnit)
+ void performEffect(BaseUnit)
}


battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.Judgement
battleEntity.combatMove.SupportMove <|-- battleEntity.combatMove.Berserk
battleEntity.combatMove.BaseMove <|-- battleEntity.combatMove.AttackMove
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.CrossRipperSlasher
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.BackStab
battleEntity.combatMove.SupportMove <|-- battleEntity.combatMove.DarkMagic
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.EnchantDeadlyPoison
battleEntity.combatMove.Buff <|-- battleEntity.combatMove.DebuffAttack
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.HolyLight
battleEntity.combatMove.SupportMove <|-- battleEntity.combatMove.Unbreakable
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.RoarOfThunder
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.Firaga
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.RisingDragonStrike
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.Poison
battleEntity.combatMove.SupportMove <|-- battleEntity.combatMove.Heal
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.EarthShake
battleEntity.combatMove.Buff <|-- battleEntity.combatMove.BoostDefense
battleEntity.combatMove.Buff <|-- battleEntity.combatMove.DOT
battleEntity.combatMove.BaseMove <|-- battleEntity.combatMove.SupportMove
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.DrainLife
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.DemonBite
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.BasicAttack
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.Taunt
battleEntity.combatMove.SupportMove <|-- battleEntity.combatMove.BlessingOfGod
battleEntity.combatMove.Buff <|-- battleEntity.combatMove.Barrier
battleEntity.combatMove.Buff <|-- battleEntity.combatMove.DebuffDefense
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.Thundara
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.DarkHold
battleEntity.combatMove.Buff <|-- battleEntity.combatMove.Temper
battleEntity.combatMove.AttackMove <|-- battleEntity.combatMove.SoulEater
@enduml